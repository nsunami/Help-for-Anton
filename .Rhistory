filter(Condition != 1) %>%
filter(Condition == 2) %>%
mutate(RT2 = RT)
stroop_anton <- long_stroop_0 %>%
bind_cols(long_stroop_2)
long_stroop_2 <- long_stroop %>%
filter(Condition != 1) %>%
filter(Condition == 2) %>%
mutate(RT2 = RT) %>%
select(RT2)
stroop_anton <- long_stroop_0 %>%
bind_cols(long_stroop_2)
## Create columns for the long stroop
long_stroop_0 <- long_stroop %>%
filter(Condition != 1) %>%
filter(Condition == 0) %>%
mutate(RT0 = RT) %>%
select(RT0, subj_num, time)
long_stroop_2 <- long_stroop %>%
filter(Condition != 1) %>%
filter(Condition == 2) %>%
mutate(RT2 = RT) %>%
select(RT2, subj_num, time)
stroop_anton <- long_stroop_0 %>%
bind_cols(long_stroop_2)
stroop_anton
## ## ## ## ## ## ## ## ## ## ## ## ## ##
# Calculate the difference between RT0 vs RT2
stroop_anton <- stroop_anton %>%
mutate(RTdiff = RT2 - RT0)
################################
# Calculate the difference between RT0 vs RT2
stroop_anton <- stroop_anton %>%
mutate(RTdiff = RT2 - RT0) %>%
mutate(rowid = row_number())
################################
# Calculate the difference between RT0 vs RT2
stroop_anton <- stroop_anton %>%
mutate(RTdiff = RT2 - RT0) %>%
mutate(rowid = row_number())
stroop_anton_split1 <- stroop_anton %>%
group_by(subj_num...2) %>%
mutate(sample_number = n()/2) %>%
# Sample half of each groups
sample_frac(0.5)
participant_df_split2 <- stroop_anton %>%
filter(!(rowid %in% stroop_anton_split1$rowid))
stroop_anton_split1
stroop_anton <- stroop_anton %>%
mutate(RTdiff = RT2 - RT0) %>%
mutate(rowid = row_number())
stroop_anton_split1 <- stroop_anton %>%
group_by(subj_num...2) %>%
mutate(sample_number = n()/2) %>%
# Sample half of each groups
sample_frac(0.5)
participant_df_split2 <- stroop_anton %>%
filter(!(rowid %in% stroop_anton_split1$rowid))
stroop_anton_split1
participant_df_split2
stroop_anton
stroop_anton <- stroop_anton %>%
mutate(RTdiff = RT2 - RT0) %>%
mutate(rowid = row_number())
stroop_anton
stroop_anton <- long_stroop_0 %>%
bind_cols(long_stroop_2)
stroop_anton
long_stroop_0
## ## ## ## ## ## ## ## ## ## ## ## ## ##
## Create columns for the long stroop
long_stroop_0 <- long_stroop %>%
filter(Condition != 1) %>%
filter(Condition == 0) %>%
mutate(RT0 = RT) %>%
select(RT0, subj_num, time)
long_stroop_0
## ## ## ## ## ## ## ## ## ## ## ## ## ##
## Create columns for the long stroop
long_stroop_0 <- long_stroop %>%
as_tibble() %>%
filter(Condition != 1) %>%
filter(Condition == 0) %>%
mutate(RT0 = RT) %>%
select(RT0, subj_num, time)
## ## ## ## ## ## ## ## ## ## ## ## ## ##
## Create columns for the long stroop
long_stroop_0 <- long_stroop %>%
as_tibble() %>%
filter(Condition != 1) %>%
filter(Condition == 0) %>%
mutate(RT0 = RT) %>%
select(RT0, subj_num, time)
long_stroop_2 <- long_stroop %>%
filter(Condition != 1) %>%
filter(Condition == 2) %>%
mutate(RT2 = RT) %>%
select(RT2, subj_num, time)
stroop_anton <- long_stroop_0 %>%
bind_cols(long_stroop_2)
################################
# Calculate the difference between RT0 vs RT2
stroop_anton <- stroop_anton %>%
mutate(RTdiff = RT2 - RT0) %>%
mutate(rowid = row_number())
stroop_anton_split1 <- stroop_anton %>%
group_by(subj_num...2) %>%
mutate(sample_number = n()/2) %>%
# Sample half of each groups
sample_frac(0.5)
participant_df_split2 <- stroop_anton %>%
filter(!(rowid %in% stroop_anton_split1$rowid))
stroop_anton_split1
participant_df_split2
stroop_anton_split1 <- stroop_anton %>%
group_by(subj_num...2) %>%
mutate(sample_number = n()/2) %>%
# Sample half of each groups
sample_frac(0.5) %>%
arrange(rowid)
participant_df_split2 <- stroop_anton %>%
filter(!(rowid %in% stroop_anton_split1$rowid))
stroop_anton_split1
participant_df_split2
View(stroop_anton_split1)
stroop_anton_split2 <- stroop_anton %>%
filter(!(rowid %in% stroop_anton_split1$rowid))
long_stroop_2 <- long_stroop %>%
filter(Condition != 1) %>%
filter(Condition == 2) %>%
mutate(RT2 = RT) %>%
select(RT2)
stroop_anton <- long_stroop_0 %>%
bind_cols(long_stroop_2)
################################
# Calculate the difference between RT0 vs RT2
stroop_anton <- stroop_anton %>%
mutate(RTdiff = RT2 - RT0) %>%
mutate(rowid = row_number())
stroop_anton_split1 <- stroop_anton %>%
group_by(subj_num...2) %>%
mutate(sample_number = n()/2) %>%
# Sample half of each groups
sample_frac(0.5) %>%
arrange(rowid)
stroop_anton_split2 <- stroop_anton %>%
filter(!(rowid %in% stroop_anton_split1$rowid))
stroop_anton_split1 <- stroop_anton %>%
group_by(subj_num) %>%
mutate(sample_number = n()/2) %>%
# Sample half of each groups
sample_frac(0.5) %>%
arrange(rowid)
stroop_anton_split2 <- stroop_anton %>%
filter(!(rowid %in% stroop_anton_split1$rowid))
View(stroop_anton_split1)
View(stroop_anton_split2)
cor(stroop_anton_split1$RTdiff, stroop_anton_split2$RTdiff)
?cor
install.packages("splithalfr")
install.packages("splithalf")
splithalf::multiverse.plot()
library(splithalf)
colnames(long_stroop)
difference <- splithalf(data = long_stroop,
outcome = "RT",
score = "difference",
# conditionlist = c(0, 2),
halftype = "random",
permutations = 5000,
var.RT = "RT",
# var.condition = "Block",
var.participant = "subj_num",
var.compare = "Condition",
compare1 = 0,
compare2 = 2,
average = "mean",
plot = TRUE)
difference_time <- splithalf(data = long_stroop,
outcome = "RT",
score = "difference",
conditionlist = c(1, 2),
halftype = "random",
permutations = 5000,
var.RT = "RT",
var.condition = "Time",
var.participant = "subj_num",
var.compare = "Condition",
compare1 = 0,
compare2 = 2,
average = "mean",
plot = TRUE)
difference_time <- splithalf(data = long_stroop,
outcome = "RT",
score = "difference",
conditionlist = c(1, 2),
halftype = "random",
permutations = 5000,
var.RT = "RT",
var.condition = "time",
var.participant = "subj_num",
var.compare = "Condition",
compare1 = 0,
compare2 = 2,
average = "mean",
plot = TRUE)
#### Only for Time 1
difference <- long_stroop %>%
filter(time == 1) %>%
splithalf(data = long_stroop,
outcome = "RT",
score = "difference",
# conditionlist = c(0, 2),
halftype = "random",
permutations = 5000,
var.RT = "RT",
# var.condition = "Block",
var.participant = "subj_num",
var.compare = "Condition",
compare1 = 0,
compare2 = 2,
average = "mean",
plot = TRUE)
difference <- long_stroop %>%
filter(time == 2) %>%
splithalf(data = long_stroop,
outcome = "RT",
score = "difference",
# conditionlist = c(0, 2),
halftype = "random",
permutations = 5000,
var.RT = "RT",
# var.condition = "Block",
var.participant = "subj_num",
var.compare = "Condition",
compare1 = 0,
compare2 = 2,
average = "mean",
plot = TRUE)
long_stroop %>%
filter(time == 2)
long_stroop %>%
filter(time == 2) %>% head()
long_stroop %>%
filter(time == 1) %>% head()
difference <- long_stroop %>%
filter(time == 2) %>%
splithalf(data = .,
outcome = "RT",
score = "difference",
# conditionlist = c(0, 2),
halftype = "random",
permutations = 5000,
var.RT = "RT",
# var.condition = "Block",
var.participant = "subj_num",
var.compare = "Condition",
compare1 = 0,
compare2 = 2,
average = "mean",
plot = TRUE)
#### Only for Time 1
difference <- long_stroop %>%
filter(time == 1) %>%
splithalf(data = .,
outcome = "RT",
score = "difference",
# conditionlist = c(0, 2),
halftype = "random",
permutations = 5000,
var.RT = "RT",
# var.condition = "Block",
var.participant = "subj_num",
var.compare = "Condition",
compare1 = 0,
compare2 = 2,
average = "mean",
plot = TRUE)
difference_time <- splithalf(data = long_stroop,
outcome = "RT",
score = "average",
halftype = "random",
permutations = 5000,
var.RT = "RT",
var.condition = "time",
var.participant = "subj_num",
average = "mean",
plot = TRUE)
difference_time <- splithalf(data = long_stroop,
outcome = "RT",
score = "average",
conditionlist = c(1, 2),
halftype = "random",
permutations = 5000,
var.RT = "RT",
var.condition = "time",
var.participant = "subj_num",
average = "mean",
plot = TRUE)
.99^2
.97^2
long_stroop
library(lme4)
colnames(long_stroop)
?lmer
lmer(data = long_stroop,
formula = RT ~ Condition |subj_num)
lmer(data = long_stroop,
formula = RT ~ Condition |subj_num) %>% summary()
lmer(data = long_stroop,
formula = RT ~ Condition + Condition |subj_num) %>% summary()
long_stroop$Block %>% table()
colnames(long_stroop)
lmer(data = long_stroop,
formula = RT ~ Condition + (1 + time|subj_num)) %>% summary()
### HLM
long_stroop %>%
filter(Condition != 1) %>%
lmer(data = long_stroop,
formula = RT ~ Condition + (1 + time|subj_num)) %>% summary()
long_stroop %>%
filter(Condition != 1)
### HLM
long_stroop %>%
filter(Condition != 1) %>%
lmer(data = long_stroop,
formula = RT ~ dummy(Condition) + (1 + time|subj_num)) %>% summary()
### HLM
long_stroop %>%
filter(Condition != 1) %>%
lmer(data = long_stroop,
formula = RT ~ dummy(Condition, 0) + (1 + time|subj_num)) %>% summary()
### HLM
long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = long_stroop,
formula = RT ~ Condition_dummy + (1 + time|subj_num)) %>% summary()
### HLM
long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + (1 + time|subj_num)) %>% summary()
library(sjstats)
install.packages("sjstats")
### HLM
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + (1 + time|subj_num)) %>% summary()
library(sjstats)
icc(hlm_model)
performance::icc(hlm_model)
### HLM
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + (1 + time|subj_num))
performance::icc(hlm_model)
### HLM
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + time + (1 + time|subj_num))
library(sjstats)
performance::icc(hlm_model)
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = 1 + (1 + time|subj_num))
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = (1 + time|subj_num))
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = 1 + (1 + time|subj_num))
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = 1 + (1|subj_num))
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = 1 + (1|subj_num))
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = 1 + (1|subj_num))
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = 1 + (1 | subj_num))
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(
formula = 1 + (1 | subj_num))
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1)
long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1)
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = 1 + (1 | subj_num))
### HLM
unconditional_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ 1 + (1 | subj_num))
performance::icc(unconditional_model)
performance::icc(unconditional_model)
performance::icc(hlm_model)
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + (1 + Condition_dummy|Trial))
performance::icc(hlm_model)
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + (1 + Condition_dummy|subj_sum))
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + (1 + Condition_dummy|subj_num))
library(sjstats)
performance::icc(unconditional_model)
performance::icc(hlm_model)
hlm_model %>% summary(hlm_model)
hlm_model %>% summary()
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + time + (Condition_dummy|subj_num +
time|subj_num))
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + time + (1 + Condition_dummy|subj_num +
time|subj_num))
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + time + (Condition_dummy|subj_num) +
(time|subj_num))
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + (Condition_dummy|subj_num) +
(time|subj_num))
hlm_model <- long_stroop %>%
filter(Condition != 1) %>%
mutate(Condition_dummy = Condition - 1) %>%
lmer(data = .,
formula = RT ~ Condition_dummy + time + (Condition_dummy|subj_num))
hlm_model %>% summary()
long_stroop %>% group_by(time) %>% summarise(mean(RT))
library(psych)
t2r(-16.40, 46)
hlm_model <- long_stroop %>%
filter(Condition == 0) %>%
lmer(data = .,
formula = RT ~ time + (Trial|subj_num))
hlm_model <- long_stroop %>%
filter(Condition == 0) %>%
lmer(data = .,
formula = RT ~ time + (Trial|subj_num))
hlm_model %>% summary()
?lmer
?nlme::gls
nlme::gls(RT ~ time + (Trial|subj_num),
cor=corSymm(form=~1|Trial))
library(nlme)
nlme::gls(RT ~ time + (Trial|subj_num),
cor=corSymm(form=~1|Trial))
gls(RT ~ time + (Trial|subj_num),
cor=corSymm(form=~1|Trial))
gls(data =long_stroop, RT ~ time + (Trial|subj_num),
cor=corSymm(form=~1|Trial))
